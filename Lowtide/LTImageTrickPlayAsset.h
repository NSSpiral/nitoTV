/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "LTTrickPlayAsset.h"
#import "LTImageTrickPlayAsset.h"
#import "Lowtide-Structs.h"

@class NSURL, NSMutableIndexSet, NSString, NSArray;

@interface LTImageTrickPlayAsset : LTTrickPlayAsset {
	NSURL* _directoryURL;
	NSArray* _frames;
	double _frameTimeDifferenceInSeconds;
	NSString* _frameFileNameFormat;
	BOOL _isEncrypted;
	BOOL _isReady;
	int _preloadedFilesOnEitherEnd;
	NSMutableIndexSet* _mutableActiveRequestsIndexSet;
	opaque_pthread_mutex_t _activeImageRequestMutex;
}
-(void)dealloc;
-(id)initWithURL:(id)url;
-(id)initWithURL:(id)url andMerchant:(id)merchant;
-(BOOL)isReady;
-(unsigned)indexForTime:(double)time;
-(id)URLForTime:(double)time;
-(id)URLsForTime:(double)time;
-(id)URLsForTime:(double)time withPreloadedImageURLsCount:(unsigned)preloadedImageURLsCount;
-(id)URLsForTime:(double)time direction:(int)direction withPreloadedImageURLsCount:(unsigned)preloadedImageURLsCount;
-(id)URLsForTime:(double)time direction:(int)direction shouldProvideEitherSide:(BOOL)side withPreloadedImageURLsCount:(unsigned)preloadedImageURLsCount;
-(id)URLsForTime:(double)time direction:(int)direction withPreloadedImageURLsCount:(unsigned)preloadedImageURLsCount atInterval:(int)interval;
-(void)cancelPriorImageLoadsFromTime:(double)time direction:(int)direction;
-(id)imageForTime:(double)time;
-(id)imageForTime:(double)time withPreloadedImageURLsCount:(unsigned)preloadedImageURLsCount;
-(id)imageForTime:(double)time direction:(int)direction;
-(id)imageForTime:(double)time direction:(int)direction withPreloadedImageURLsCount:(unsigned)preloadedImageURLsCount;
-(id)firstImageFromURLs:(id)urls;
-(double)frameTimeDifferenceInSeconds;
@end

@interface LTImageTrickPlayAsset (Private)
-(void)_fetchTrackConfigFileAtURL:(id)url forMerchant:(id)merchant;
-(void)_trackConfigFileReady:(id)ready;
-(id)_loadImageURLsForCount:(unsigned)count forBaseURL:(id)baseURL;
-(id)_loadImageURLsForCount:(unsigned)count forBaseURL:(id)baseURL isOneBasedNamingScheme:(BOOL)scheme;
@end

